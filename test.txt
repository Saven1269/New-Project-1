apiVersion: apps/v1
kind: Deployment
metadata:
  name: $K8S_PROJECT-$K8S_ENV-$K8S_APP_NAME
  labels:
    project: $K8S_PROJECT
    environment: $K8S_ENV
    app: $K8S_APP_NAME
    version: "$K8S_VERSION"
    tags.datadoghq.com/service: $K8S_PROJECT-$K8S_APP_NAME
spec:
  replicas: $K8S_APP_REPLICAS
  selector:
    matchLabels:
      project: $K8S_PROJECT
      environment: $K8S_ENV
      app: $K8S_APP_NAME
  template:
    metadata:
      labels:
        project: $K8S_PROJECT
        environment: $K8S_ENV
        app: $K8S_APP_NAME
        version: "$K8S_VERSION"
        tags.datadoghq.com/service: $K8S_PROJECT-$K8S_APP_NAME
    spec:
      nodeSelector:
        "kubernetes.azure.com/agentpool": linux
      volumes:
        - name: sftp-external-fs
          persistentVolumeClaim:
            claimName: sftp-external-fs
        azureFile:
          secretName: $K8S_PROJECT-$K8S_ENV-fs-secret
          shareName: sftp
          readOnly: false
        - name: sftp-internal-fs
          persistentVolumeClaim:
           claimName: sftp-internal-fs
        azureFile:
          secretName: $K8S_PROJECT-$K8S_ENV-fs-secret
          shareName: sftp-internal
          readOnly: false
        - name: jobconfig-fs
          azureFile:
            secretName: $K8S_PROJECT-$K8S_ENV-fs-secret
            shareName: jobconfig
            readOnly: true
        - name: app-settings
          secret:
            secretName: $K8S_PROJECT-$K8S_ENV-$K8S_APP_NAME-app-settings-secret
      containers:
        - name: $K8S_PROJECT-$K8S_ENV-$K8S_APP_NAME
          image: $K8S_IMAGE_URI:$K8S_IMAGE_TAG
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              value: sc-$K8S_PROJECT-$K8S_ENV
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['version']
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_TRACE_SAMPLE_RATE
              value: "1"
            - name: DD_RUNTIME_METRICS_ENABLED
              value: "true"
            - name: DD_KUBERNETES_POD_LABELS_AS_TAGS
              value: '{"project":"app"}'
          volumeMounts:
            - name: sftp-internal-fs
              mountPath: /mnt/sftpintroot
            - name: sftp-external-fs
              mountPath: /mnt/sftpextroot
            - name: jobconfig-fs
              mountPath: /mnt/jobconfig
            - name: app-settings
              mountPath: /app/appsettings.Production.json
              subPath: appsettings.Production.json
              readOnly: true
